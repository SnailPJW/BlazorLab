@page "/employee"
@using Microsoft.Extensions.Logging
@inject ILogger<Employee> Logger

<h1>@_title</h1>
<form>
<div class="form-group row">
<label for="firstName" class="col-sm-2 col-form-label">First
Name</label>
<div class="col-sm-10">
<input class="form-control" placeholder="FirstName" />
</div>
</div>
<div class="form-group row">
<label for="lastName" class="col-sm-2 col-form-label">Last
Name</label>
<div class="col-sm-10">
<input class="form-control" placeholder="LastName" />
</div>
</div>
<input type="button" value="Add" class="btn btn-primary" @onclick="Add"/>
<input type="button" value="Update" class="btn btn-primary" @onclick="Update"/>
</form>
<br />
<p><em>Loading...</em></p>

@code{
    private string _title;
    protected override void OnInitialized()
        {
            _title = "test1";
        }
    
    private void Add(){
        Logger.LogInformation("aa");
        Logger.LogInformation("Add Start!");
    }
    private void Update(){
        Logger.LogInformation("Update Start!");
    }
}
@* 
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
} *@
